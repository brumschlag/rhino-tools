<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Castle.Facilities.ActiveRecordIntegration</name>
    </assembly>
    <members>
        <member name="T:Castle.Facilities.ActiveRecordIntegration.ActiveRecordFacility">
            <summary>
            Provides integration with ActiveRecord framework.
            </summary>
        </member>
        <member name="T:Castle.Facilities.ActiveRecordIntegration.SafeSessionProxy">
            <summary>
            This class implements <see cref="T:NHibernate.ISession"/>
            and delegates <see cref="M:Castle.Facilities.ActiveRecordIntegration.SafeSessionProxy.Close"/> and 
            <see cref="M:Castle.Facilities.ActiveRecordIntegration.SafeSessionProxy.Dispose"/> to <see cref="M:Castle.ActiveRecord.Framework.ISessionFactoryHolder.ReleaseSession(NHibernate.ISession)"/>
            as the session is in fact managed by ActiveRecord framework
            </summary>
        </member>
        <member name="P:Castle.Facilities.ActiveRecordIntegration.SafeSessionProxy.CacheMode">
            <summary>
             The current cache mode. 
            </summary>
            
            <remarks>
            
                        Cache mode determines the manner in which this session can interact with
                        the second level cache.
                        
            </remarks>
            
        </member>
        <member name="P:Castle.Facilities.ActiveRecordIntegration.SafeSessionProxy.Statistics">
            <summary>
             Get the statistics for this session.
            </summary>
            
        </member>
        <member name="T:Castle.Facilities.ActiveRecordIntegration.SessionFactoryDelegate">
            <summary>
            Implements <see cref="T:NHibernate.ISessionFactory"/> allowing 
            it to be used by the container as an ordinary component.
            However only <see cref="M:NHibernate.ISessionFactory.OpenSession(System.Data.IDbConnection)"/>
            is implemented
            </summary>
        </member>
        <member name="M:Castle.Facilities.ActiveRecordIntegration.SessionFactoryDelegate.GetCurrentSession">
            <remarks>Needed for NHibernate 1.2 from trunk</remarks>
        </member>
        <member name="M:Castle.Facilities.ActiveRecordIntegration.SessionFactoryDelegate.OpenStatelessSession">
            <summary>
             Get a new stateless session.
            </summary>
            
        </member>
        <member name="M:Castle.Facilities.ActiveRecordIntegration.SessionFactoryDelegate.OpenStatelessSession(System.Data.IDbConnection)">
            <summary>
             Get a new stateless session for the given ADO.NET connection.
            </summary>
            
        </member>
        <member name="P:Castle.Facilities.ActiveRecordIntegration.SessionFactoryDelegate.NHibernate#ISessionFactory#DefinedFilterNames">
            <summary>
            
                        Obtain a set of the names of all filters defined on this SessionFactory.
                        
            </summary>
            <return>The set of filter names.</return>
        </member>
        <member name="P:Castle.Facilities.ActiveRecordIntegration.SessionFactoryDelegate.Statistics">
            <summary>
             Get the statistics for this session factory
            </summary>
            
        </member>
        <member name="M:Castle.Facilities.ActiveRecordIntegration.TransactionScopeResourceAdapter.#ctor(Castle.Services.Transaction.TransactionMode)">
            <summary>
            Initializes a new instance of the <see cref="T:Castle.Facilities.ActiveRecordIntegration.TransactionScopeResourceAdapter"/> class.
            </summary>
            <param name="transactionMode">The transaction mode.</param>
        </member>
    </members>
</doc>
