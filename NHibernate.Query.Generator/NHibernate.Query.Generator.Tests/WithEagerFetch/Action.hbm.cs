//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Query {
    
    
    public partial class Where {
        
        /// <summary>
        /// Query helper for member Where.Action
        /// </summary>
        public static Root_Query_Action Action {
            get {
                return new Root_Query_Action();
            }
        }
        
        /// <summary>
        /// Query helper for member Where.Operation
        /// </summary>
        public static Root_Query_Operation Operation {
            get {
                return new Root_Query_Operation();
            }
        }
        
        /// <summary>
        /// Query helper for member Where.Query_Action
        /// </summary>
        public partial class Query_Action<T1> : QueryBuilder<T1>
         {
            
            /// <summary>
            /// Query helper for member Query_Action..ctor
            /// </summary>
            public Query_Action(QueryBuilder<T1> parent, string name, string associationPath) : 
                    base(parent, name, associationPath) {
            }
            
            /// <summary>
            /// Query helper for member Query_Action..ctor
            /// </summary>
            public Query_Action(QueryBuilder<T1> parent, string name, string associationPath, bool backTrackAssociationOnEquality) : 
                    base(parent, name, associationPath, backTrackAssociationOnEquality) {
            }
            
            /// <summary>
            /// Query helper for member Query_Action.
            /// </summary>
            public virtual PropertyQueryBuilder<T1> Name {
                get {
                    string temp = associationPath;
                    return new PropertyQueryBuilder<T1>(this, "Name", temp);
                }
            }
            
            /// <summary>
            /// Query helper for member Query_Action.
            /// </summary>
            public virtual PropertyQueryBuilder<T1> Description {
                get {
                    string temp = associationPath;
                    return new PropertyQueryBuilder<T1>(this, "Description", temp);
                }
            }
            
            /// <summary>
            /// Query helper for member Query_Action.
            /// </summary>
            public virtual PropertyQueryBuilder<T1> Obsolete {
                get {
                    string temp = associationPath;
                    return new PropertyQueryBuilder<T1>(this, "Obsolete", temp);
                }
            }
            
            /// <summary>
            /// Query helper for member Query_Action.
            /// </summary>
            public virtual QueryBuilder<T1> Id {
                get {
                    string temp = associationPath;
                    return new QueryBuilder<T1>(this, "Id", temp);
                }
            }
            
            /// <summary>
            /// Query helper for member Query_Action.
            /// </summary>
            public virtual Query_Application<T1> Application {
                get {
                    string temp = associationPath;
                    temp = ((temp + ".") 
                                + "Application");
                    return new Query_Application<T1>(this, "Application", temp, true);
                }
            }
        }
        
        /// <summary>
        /// Query helper for member Where.Root_Query_Action
        /// </summary>
        public partial class Root_Query_Action : Query_Action<NHibernate.Query.Generator.Tests.WithEagerFetch.Action> {
            
            /// <summary>
            /// Query helper for member Root_Query_Action..ctor
            /// </summary>
            public Root_Query_Action() : 
                    base(null, "this", null) {
            }
        }
        
        /// <summary>
        /// Query helper for member Where.Query_Operation
        /// </summary>
        public partial class Query_Operation<T2> : Query_Action<T2>
         {
            
            /// <summary>
            /// Query helper for member Query_Operation..ctor
            /// </summary>
            public Query_Operation(QueryBuilder<T2> parent, string name, string associationPath) : 
                    base(parent, name, associationPath) {
            }
            
            /// <summary>
            /// Query helper for member Query_Operation..ctor
            /// </summary>
            public Query_Operation(QueryBuilder<T2> parent, string name, string associationPath, bool backTrackAssociationOnEquality) : 
                    base(parent, name, associationPath, backTrackAssociationOnEquality) {
            }
        }
        
        /// <summary>
        /// Query helper for member Where.Root_Query_Operation
        /// </summary>
        public partial class Root_Query_Operation : Query_Operation<NHibernate.Query.Generator.Tests.WithEagerFetch.Operation> {
            
            /// <summary>
            /// Query helper for member Root_Query_Operation..ctor
            /// </summary>
            public Root_Query_Operation() : 
                    base(null, "this", null) {
            }
        }
    }
    
    public partial class OrderBy {
        
        /// <summary>
        /// Query helper for member OrderBy.Action
        /// </summary>
        public partial class Action {
            
            /// <summary>
            /// Query helper for member Action.Name
            /// </summary>
            public static OrderByClause Name {
                get {
                    return new OrderByClause("Name");
                }
            }
            
            /// <summary>
            /// Query helper for member Action.Description
            /// </summary>
            public static OrderByClause Description {
                get {
                    return new OrderByClause("Description");
                }
            }
            
            /// <summary>
            /// Query helper for member Action.Obsolete
            /// </summary>
            public static OrderByClause Obsolete {
                get {
                    return new OrderByClause("Obsolete");
                }
            }
            
            /// <summary>
            /// Query helper for member Action.Id
            /// </summary>
            public static OrderByClause Id {
                get {
                    return new OrderByClause("Id");
                }
            }
        }
    }
    
    public partial class ProjectBy {
        
        /// <summary>
        /// Query helper for member ProjectBy.Action
        /// </summary>
        public partial class Action {
            
            /// <summary>
            /// Query helper for member Action.Name
            /// </summary>
            public static PropertyProjectionBuilder Name {
                get {
                    return new PropertyProjectionBuilder("Name");
                }
            }
            
            /// <summary>
            /// Query helper for member Action.Description
            /// </summary>
            public static PropertyProjectionBuilder Description {
                get {
                    return new PropertyProjectionBuilder("Description");
                }
            }
            
            /// <summary>
            /// Query helper for member Action.Obsolete
            /// </summary>
            public static PropertyProjectionBuilder Obsolete {
                get {
                    return new PropertyProjectionBuilder("Obsolete");
                }
            }
            
            /// <summary>
            /// Query helper for member Action.Id
            /// </summary>
            public static PropertyProjectionBuilder Id {
                get {
                    return new PropertyProjectionBuilder("Id");
                }
            }
        }
    }
    
    public partial class GroupBy {
        
        /// <summary>
        /// Query helper for member GroupBy.Action
        /// </summary>
        public partial class Action {
            
            /// <summary>
            /// Query helper for member Action.Name
            /// </summary>
            public static NHibernate.Expression.IProjection Name {
                get {
                    return NHibernate.Expression.Projections.GroupProperty("Name");
                }
            }
            
            /// <summary>
            /// Query helper for member Action.Description
            /// </summary>
            public static NHibernate.Expression.IProjection Description {
                get {
                    return NHibernate.Expression.Projections.GroupProperty("Description");
                }
            }
            
            /// <summary>
            /// Query helper for member Action.Obsolete
            /// </summary>
            public static NHibernate.Expression.IProjection Obsolete {
                get {
                    return NHibernate.Expression.Projections.GroupProperty("Obsolete");
                }
            }
        }
    }
}
