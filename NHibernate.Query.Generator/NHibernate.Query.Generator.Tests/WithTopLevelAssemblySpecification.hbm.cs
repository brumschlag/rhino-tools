//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.312
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Query {
    
    
    public partial class Where {
        
        /// <summary>
        /// Query helper for member Where.Broker
        /// </summary>
        public static Root_Query_Broker Broker {
            get {
                return new Root_Query_Broker();
            }
        }
        
        /// <summary>
        /// Query helper for member Where.Query_Broker
        /// </summary>
        public partial class Query_Broker<T1> : QueryBuilder<T1>
         {
            
            /// <summary>
            /// Query helper for member Query_Broker..ctor
            /// </summary>
            public Query_Broker(QueryBuilder<T1> parent, string name, string associationPath) : 
                    base(parent, name, associationPath) {
            }
            
            /// <summary>
            /// Query helper for member Query_Broker..ctor
            /// </summary>
            public Query_Broker(QueryBuilder<T1> parent, string name, string associationPath, bool backTrackAssociationOnEquality) : 
                    base(parent, name, associationPath, backTrackAssociationOnEquality) {
            }
            
            /// <summary>
            /// Query helper for member Query_Broker.
            /// </summary>
            public virtual QueryBuilder<T1> Id {
                get {
                    string temp = associationPath;
                    return new QueryBuilder<T1>(this, "Id", temp);
                }
            }
            
            /// <summary>
            /// Query helper for member Query_Broker.Name
            /// </summary>
            public virtual Query_Name<T1> Name {
                get {
                    return new Query_Name<T1>(this, "Name", null);
                }
            }
            
            /// <summary>
            /// Query helper for member Query_Broker.Query_Name
            /// </summary>
            public partial class Query_Name<T2> : QueryBuilder<T2>
             {
                
                /// <summary>
                /// Query helper for member Query_Name..ctor
                /// </summary>
                public Query_Name(QueryBuilder<T2> parent, string name, string associationPath) : 
                        base(parent, name, associationPath) {
                }
                
                /// <summary>
                /// Query helper for member Query_Name..ctor
                /// </summary>
                public Query_Name(QueryBuilder<T2> parent, string name, string associationPath, bool backTrackAssociationOnEquality) : 
                        base(parent, name, associationPath, backTrackAssociationOnEquality) {
                }
                
                /// <summary>
                /// Query helper for member Query_Name.
                /// </summary>
                public virtual PropertyQueryBuilder<T2> FirstName {
                    get {
                        string temp = associationPath;
                        return new PropertyQueryBuilder<T2>(this, "Name.FirstName", temp);
                    }
                }
                
                /// <summary>
                /// Query helper for member Query_Name.
                /// </summary>
                public virtual PropertyQueryBuilder<T2> LastName {
                    get {
                        string temp = associationPath;
                        return new PropertyQueryBuilder<T2>(this, "Name.LastName", temp);
                    }
                }
                
                /// <summary>
                /// Query helper for member Query_Name.
                /// </summary>
                public virtual PropertyQueryBuilder<T2> MiddleName {
                    get {
                        string temp = associationPath;
                        return new PropertyQueryBuilder<T2>(this, "Name.MiddleName", temp);
                    }
                }
                
                /// <summary>
                /// Query helper for member Query_Name.
                /// </summary>
                public virtual PropertyQueryBuilder<T2> Prefix {
                    get {
                        string temp = associationPath;
                        return new PropertyQueryBuilder<T2>(this, "Name.Prefix", temp);
                    }
                }
                
                /// <summary>
                /// Query helper for member Query_Name.
                /// </summary>
                public virtual PropertyQueryBuilder<T2> Suffix {
                    get {
                        string temp = associationPath;
                        return new PropertyQueryBuilder<T2>(this, "Name.Suffix", temp);
                    }
                }
                
                /// <summary>
                /// Query helper for member Query_Name.
                /// </summary>
                public virtual PropertyQueryBuilder<T2> DisplayName {
                    get {
                        string temp = associationPath;
                        return new PropertyQueryBuilder<T2>(this, "Name.DisplayName", temp);
                    }
                }
            }
        }
        
        /// <summary>
        /// Query helper for member Where.Root_Query_Broker
        /// </summary>
        public partial class Root_Query_Broker : Query_Broker<Field.Testing.Trucking.Broker> {
            
            /// <summary>
            /// Query helper for member Root_Query_Broker..ctor
            /// </summary>
            public Root_Query_Broker() : 
                    base(null, "this", null) {
            }
        }
    }
    
    public partial class OrderBy {
        
        /// <summary>
        /// Query helper for member OrderBy.Broker
        /// </summary>
        public partial class Broker {
            
            /// <summary>
            /// Query helper for member Broker.Id
            /// </summary>
            public static OrderByClause Id {
                get {
                    return new OrderByClause("Id");
                }
            }
            
            /// <summary>
            /// Query helper for member Broker.Name
            /// </summary>
            public partial class Name {
                
                /// <summary>
                /// Query helper for member Name.FirstName
                /// </summary>
                public static OrderByClause FirstName {
                    get {
                        return new OrderByClause("Name.FirstName");
                    }
                }
                
                /// <summary>
                /// Query helper for member Name.LastName
                /// </summary>
                public static OrderByClause LastName {
                    get {
                        return new OrderByClause("Name.LastName");
                    }
                }
                
                /// <summary>
                /// Query helper for member Name.MiddleName
                /// </summary>
                public static OrderByClause MiddleName {
                    get {
                        return new OrderByClause("Name.MiddleName");
                    }
                }
                
                /// <summary>
                /// Query helper for member Name.Prefix
                /// </summary>
                public static OrderByClause Prefix {
                    get {
                        return new OrderByClause("Name.Prefix");
                    }
                }
                
                /// <summary>
                /// Query helper for member Name.Suffix
                /// </summary>
                public static OrderByClause Suffix {
                    get {
                        return new OrderByClause("Name.Suffix");
                    }
                }
                
                /// <summary>
                /// Query helper for member Name.DisplayName
                /// </summary>
                public static OrderByClause DisplayName {
                    get {
                        return new OrderByClause("Name.DisplayName");
                    }
                }
            }
        }
    }
    
    public partial class ProjectBy {
        
        /// <summary>
        /// Query helper for member ProjectBy.Broker
        /// </summary>
        public partial class Broker {
            
            /// <summary>
            /// Query helper for member Broker.Id
            /// </summary>
            public static NumericPropertyProjectionBuilder Id {
                get {
                    return new NumericPropertyProjectionBuilder("Id");
                }
            }
            
            /// <summary>
            /// Query helper for member Broker.Name
            /// </summary>
            public partial class Name {
                
                /// <summary>
                /// Query helper for member Name.FirstName
                /// </summary>
                public static PropertyProjectionBuilder FirstName {
                    get {
                        return new PropertyProjectionBuilder("Name.FirstName");
                    }
                }
                
                /// <summary>
                /// Query helper for member Name.LastName
                /// </summary>
                public static PropertyProjectionBuilder LastName {
                    get {
                        return new PropertyProjectionBuilder("Name.LastName");
                    }
                }
                
                /// <summary>
                /// Query helper for member Name.MiddleName
                /// </summary>
                public static PropertyProjectionBuilder MiddleName {
                    get {
                        return new PropertyProjectionBuilder("Name.MiddleName");
                    }
                }
                
                /// <summary>
                /// Query helper for member Name.Prefix
                /// </summary>
                public static PropertyProjectionBuilder Prefix {
                    get {
                        return new PropertyProjectionBuilder("Name.Prefix");
                    }
                }
                
                /// <summary>
                /// Query helper for member Name.Suffix
                /// </summary>
                public static PropertyProjectionBuilder Suffix {
                    get {
                        return new PropertyProjectionBuilder("Name.Suffix");
                    }
                }
                
                /// <summary>
                /// Query helper for member Name.DisplayName
                /// </summary>
                public static PropertyProjectionBuilder DisplayName {
                    get {
                        return new PropertyProjectionBuilder("Name.DisplayName");
                    }
                }
            }
        }
    }
    
    public partial class GroupBy {
        
        /// <summary>
        /// Query helper for member GroupBy.Broker
        /// </summary>
        public partial class Broker {
            
            /// <summary>
            /// Query helper for member Broker.Name
            /// </summary>
            public partial class Name {
                
                /// <summary>
                /// Query helper for member Name.FirstName
                /// </summary>
                public static NHibernate.Expression.IProjection FirstName {
                    get {
                        return NHibernate.Expression.Projections.GroupProperty("Name.FirstName");
                    }
                }
                
                /// <summary>
                /// Query helper for member Name.LastName
                /// </summary>
                public static NHibernate.Expression.IProjection LastName {
                    get {
                        return NHibernate.Expression.Projections.GroupProperty("Name.LastName");
                    }
                }
                
                /// <summary>
                /// Query helper for member Name.MiddleName
                /// </summary>
                public static NHibernate.Expression.IProjection MiddleName {
                    get {
                        return NHibernate.Expression.Projections.GroupProperty("Name.MiddleName");
                    }
                }
                
                /// <summary>
                /// Query helper for member Name.Prefix
                /// </summary>
                public static NHibernate.Expression.IProjection Prefix {
                    get {
                        return NHibernate.Expression.Projections.GroupProperty("Name.Prefix");
                    }
                }
                
                /// <summary>
                /// Query helper for member Name.Suffix
                /// </summary>
                public static NHibernate.Expression.IProjection Suffix {
                    get {
                        return NHibernate.Expression.Projections.GroupProperty("Name.Suffix");
                    }
                }
                
                /// <summary>
                /// Query helper for member Name.DisplayName
                /// </summary>
                public static NHibernate.Expression.IProjection DisplayName {
                    get {
                        return NHibernate.Expression.Projections.GroupProperty("Name.DisplayName");
                    }
                }
            }
        }
    }
}
