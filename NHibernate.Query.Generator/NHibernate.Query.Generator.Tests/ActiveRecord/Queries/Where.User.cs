//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.312
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Query {
    
    
    public partial class Where {
        
        /// <summary>
        /// Query helper for member Where.User
        /// </summary>
        public static Root_Query_User User {
            get {
                return new Root_Query_User();
            }
        }
        
        /// <summary>
        /// Query helper for member Where.Query_User
        /// </summary>
        public partial class Query_User<T1> : Query.QueryBuilder<T1>
         {
            
            /// <summary>
            /// Query helper for member Query_User..ctor
            /// </summary>
            public Query_User(string name, string associationPath) : 
                    base(name, associationPath) {
            }
            
            /// <summary>
            /// Query helper for member Query_User..ctor
            /// </summary>
            public Query_User(string name, string associationPath, bool backTrackAssociationOnEquality) : 
                    base(name, associationPath, backTrackAssociationOnEquality) {
            }
            
            /// <summary>
            /// Query helper for member Query_User.
            /// </summary>
            public virtual Query.PropertyQueryBuilder<T1> Name {
                get {
                    string temp = associationPath;
                    return new Query.PropertyQueryBuilder<T1>("Name", temp);
                }
            }
            
            /// <summary>
            /// Query helper for member Query_User.
            /// </summary>
            public virtual Query.PropertyQueryBuilder<T1> Email {
                get {
                    string temp = associationPath;
                    return new Query.PropertyQueryBuilder<T1>("Email", temp);
                }
            }
            
            /// <summary>
            /// Query helper for member Query_User.
            /// </summary>
            public virtual Query.QueryBuilder<T1> Id {
                get {
                    string temp = associationPath;
                    return new Query.QueryBuilder<T1>("Id", temp);
                }
            }
        }
        
        /// <summary>
        /// Query helper for member Where.Root_Query_User
        /// </summary>
        public partial class Root_Query_User : Query_User<NHibernate.Query.Generator.Tests.ActiveRecord.User> {
            
            /// <summary>
            /// Query helper for member Root_Query_User..ctor
            /// </summary>
            public Root_Query_User() : 
                    base("this", null) {
            }
        }
    }
    
    public partial class OrderBy {
        
        /// <summary>
        /// Query helper for member OrderBy.User
        /// </summary>
        public partial class User {
            
            /// <summary>
            /// Query helper for member User.Name
            /// </summary>
            public static Query.OrderByClause Name {
                get {
                    return new Query.OrderByClause("Name");
                }
            }
            
            /// <summary>
            /// Query helper for member User.Email
            /// </summary>
            public static Query.OrderByClause Email {
                get {
                    return new Query.OrderByClause("Email");
                }
            }
            
            /// <summary>
            /// Query helper for member User.Id
            /// </summary>
            public static Query.OrderByClause Id {
                get {
                    return new Query.OrderByClause("Id");
                }
            }
        }
    }
    
    public partial class ProjectBy {
        
        /// <summary>
        /// Query helper for member ProjectBy.User
        /// </summary>
        public partial class User {
            
            /// <summary>
            /// Query helper for member User.Name
            /// </summary>
            public static Query.PropertyProjectionBuilder Name {
                get {
                    return new Query.PropertyProjectionBuilder("Name");
                }
            }
            
            /// <summary>
            /// Query helper for member User.Email
            /// </summary>
            public static Query.PropertyProjectionBuilder Email {
                get {
                    return new Query.PropertyProjectionBuilder("Email");
                }
            }
        }
    }
    
    public partial class GroupBy {
        
        /// <summary>
        /// Query helper for member GroupBy.User
        /// </summary>
        public partial class User {
            
            /// <summary>
            /// Query helper for member User.Name
            /// </summary>
            public static NHibernate.Expression.IProjection Name {
                get {
                    return NHibernate.Expression.Projections.GroupProperty("Name");
                }
            }
            
            /// <summary>
            /// Query helper for member User.Email
            /// </summary>
            public static NHibernate.Expression.IProjection Email {
                get {
                    return NHibernate.Expression.Projections.GroupProperty("Email");
                }
            }
        }
    }
}
