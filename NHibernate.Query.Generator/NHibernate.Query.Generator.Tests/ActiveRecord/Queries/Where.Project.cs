//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.312
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Query {
    
    
    public partial class Where {
        
        /// <summary>
        /// Query helper for member Where.Project
        /// </summary>
        public static Root_Query_Project Project {
            get {
                return new Root_Query_Project();
            }
        }
        
        /// <summary>
        /// Query helper for member Where.Query_Project
        /// </summary>
        public partial class Query_Project<T1> : QueryBuilder<T1>
         {
            
            /// <summary>
            /// Query helper for member Query_Project..ctor
            /// </summary>
            public Query_Project(string name, string associationPath) : 
                    base(name, associationPath) {
            }
            
            /// <summary>
            /// Query helper for member Query_Project..ctor
            /// </summary>
            public Query_Project(string name, string associationPath, bool backTrackAssociationOnEquality) : 
                    base(name, associationPath, backTrackAssociationOnEquality) {
            }
            
            /// <summary>
            /// Query helper for member Query_Project.
            /// </summary>
            public virtual QueryBuilder<T1> Id {
                get {
                    string temp = associationPath;
                    return new QueryBuilder<T1>("Id", temp);
                }
            }
            
            /// <summary>
            /// Query helper for member Query_Project.
            /// </summary>
            public virtual Query_InstalledComponnet<T1> Componnet {
                get {
                    string temp = associationPath;
                    temp = ((temp + ".") 
                                + "Componnet");
                    return new Query_InstalledComponnet<T1>("Componnet", temp, true);
                }
            }
        }
        
        /// <summary>
        /// Query helper for member Where.Root_Query_Project
        /// </summary>
        public partial class Root_Query_Project : Query_Project<NHibernate.Query.Generator.Tests.ActiveRecord.Project> {
            
            /// <summary>
            /// Query helper for member Root_Query_Project..ctor
            /// </summary>
            public Root_Query_Project() : 
                    base("this", null) {
            }
        }
    }
    
    public partial class OrderBy {
        
        /// <summary>
        /// Query helper for member OrderBy.Project
        /// </summary>
        public partial class Project {
            
            /// <summary>
            /// Query helper for member Project.Id
            /// </summary>
            public static OrderByClause Id {
                get {
                    return new OrderByClause("Id");
                }
            }
        }
    }
    
    public partial class ProjectBy {
        
        /// <summary>
        /// Query helper for member ProjectBy.Project
        /// </summary>
        public partial class Project {
            
            /// <summary>
            /// Query helper for member Project.Id
            /// </summary>
            public static NumericPropertyProjectionBuilder Id {
                get {
                    return new NumericPropertyProjectionBuilder("Id");
                }
            }
        }
    }
    
    public partial class GroupBy {
    }
}
