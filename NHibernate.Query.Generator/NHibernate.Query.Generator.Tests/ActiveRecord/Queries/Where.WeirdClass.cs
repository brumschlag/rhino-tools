//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Query {
    
    
    public partial class Where {
        
        /// Query for member _root_query_WeirdClass
        static Root_Query_WeirdClass _root_query_WeirdClass = new Root_Query_WeirdClass();
        
        /// Query for member WeirdClass
        public static Root_Query_WeirdClass WeirdClass {
            get {
                return _root_query_WeirdClass;
            }
        }
        
        /// Query for member Query_WeirdClass
        public partial class Query_WeirdClass<T1> : Query.QueryBuilder<T1>
         {
            
            /// Query for member .ctor
            public Query_WeirdClass(string name, string associationPath) : 
                    base(name, associationPath) {
            }
            
            /// Query for member .ctor
            public Query_WeirdClass(string name, string associationPath, bool backTrackAssociationOnEquality) : 
                    base(name, associationPath, backTrackAssociationOnEquality) {
            }
            
            /// Query for member Address
            public virtual Query_Address<T1> Address {
                get {
                    return new Query_Address<T1>("Address", null);
                }
            }
            
            /// Query for member Key
            public virtual Query_Key<T1> Key {
                get {
                    return new Query_Key<T1>("Key", associationPath);
                }
            }
            
            /// Query for member Query_Address
            public partial class Query_Address<T2> : Query.QueryBuilder<T2>
             {
                
                /// Query for member .ctor
                public Query_Address(string name, string associationPath) : 
                        base(name, associationPath) {
                }
                
                /// Query for member .ctor
                public Query_Address(string name, string associationPath, bool backTrackAssociationOnEquality) : 
                        base(name, associationPath, backTrackAssociationOnEquality) {
                }
                
                /// Query for member 
                public virtual Query.PropertyQueryBuilder<T1> Street {
                    get {
                        string temp = associationPath;
                        return new Query.PropertyQueryBuilder<T1>("Address.Street", temp);
                    }
                }
            }
            
            /// Query for member Query_Key
            public partial class Query_Key<T3> : Query.QueryBuilder<T3>
             {
                
                /// Query for member .ctor
                public Query_Key(string name, string associationPath) : 
                        base(name, associationPath) {
                }
                
                /// Query for member .ctor
                public Query_Key(string name, string associationPath, bool backTrackAssociationOnEquality) : 
                        base(name, associationPath, backTrackAssociationOnEquality) {
                }
                
                /// Query for member 
                public virtual Query.PropertyQueryBuilder<T1> Department {
                    get {
                        string temp = associationPath;
                        return new Query.PropertyQueryBuilder<T1>("Key.Department", temp);
                    }
                }
                
                /// Query for member 
                public virtual Query.PropertyQueryBuilder<T1> Level {
                    get {
                        string temp = associationPath;
                        return new Query.PropertyQueryBuilder<T1>("Key.Level", temp);
                    }
                }
            }
        }
        
        /// Query for member Root_Query_WeirdClass
        public partial class Root_Query_WeirdClass : Query_WeirdClass<NHibernate.Query.Generator.Tests.ActiveRecord.WeirdClass> {
            
            /// Query for member .ctor
            public Root_Query_WeirdClass() : 
                    base("this", null) {
            }
        }
    }
    
    public partial class OrderBy {
        
        /// Query for member WeirdClass
        public partial class WeirdClass {
            
            /// Query for member Address
            public partial class Address {
                
                /// Query for member Street
                public static Query.OrderByClause Street {
                    get {
                        return new Query.OrderByClause("Address.Street");
                    }
                }
            }
            
            /// Query for member Key
            public partial class Key {
                
                /// Query for member Department
                public static Query.OrderByClause Department {
                    get {
                        return new Query.OrderByClause("Key.Department");
                    }
                }
                
                /// Query for member Level
                public static Query.OrderByClause Level {
                    get {
                        return new Query.OrderByClause("Key.Level");
                    }
                }
            }
        }
    }
    
    public partial class ProjectBy {
        
        /// Query for member WeirdClass
        public partial class WeirdClass {
            
            /// Query for member Address
            public partial class Address {
                
                /// Query for member Street
                public static Query.PropertyProjectionBuilder Street {
                    get {
                        return new Query.PropertyProjectionBuilder("Address.Street");
                    }
                }
            }
            
            /// Query for member Key
            public partial class Key {
                
                /// Query for member Department
                public static Query.PropertyProjectionBuilder Department {
                    get {
                        return new Query.PropertyProjectionBuilder("Key.Department");
                    }
                }
                
                /// Query for member Level
                public static Query.NumericPropertyProjectionBuilder Level {
                    get {
                        return new Query.NumericPropertyProjectionBuilder("Key.Level");
                    }
                }
            }
        }
    }
    
    public partial class GroupBy {
        
        /// Query for member WeirdClass
        public partial class WeirdClass {
            
            /// Query for member Address
            public partial class Address {
                
                /// Query for member Street
                public static NHibernate.Expression.IProjection Street {
                    get {
                        return NHibernate.Expression.Projections.GroupProperty("Address.Street");
                    }
                }
            }
            
            /// Query for member Key
            public partial class Key {
                
                /// Query for member Department
                public static NHibernate.Expression.IProjection Department {
                    get {
                        return NHibernate.Expression.Projections.GroupProperty("Key.Department");
                    }
                }
                
                /// Query for member Level
                public static NHibernate.Expression.IProjection Level {
                    get {
                        return NHibernate.Expression.Projections.GroupProperty("Key.Level");
                    }
                }
            }
        }
    }
}
