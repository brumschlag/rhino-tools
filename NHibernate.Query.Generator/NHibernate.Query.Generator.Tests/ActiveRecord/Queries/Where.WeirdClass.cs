//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.312
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Query {
    
    
    public partial class Where {
        
        /// <summary>
        /// Query helper for member Where.WeirdClass
        /// </summary>
        public static Root_Query_WeirdClass WeirdClass {
            get {
                return new Root_Query_WeirdClass();
            }
        }
        
        /// <summary>
        /// Query helper for member Where.Query_WeirdClass
        /// </summary>
        public partial class Query_WeirdClass<T1> : QueryBuilder<T1>
         {
            
            /// <summary>
            /// Query helper for member Query_WeirdClass..ctor
            /// </summary>
            public Query_WeirdClass(QueryBuilder<T1> parent, string name, string associationPath) : 
                    base(parent, name, associationPath) {
            }
            
            /// <summary>
            /// Query helper for member Query_WeirdClass..ctor
            /// </summary>
            public Query_WeirdClass(QueryBuilder<T1> parent, string name, string associationPath, bool backTrackAssociationOnEquality) : 
                    base(parent, name, associationPath, backTrackAssociationOnEquality) {
            }
            
            /// <summary>
            /// Query helper for member Query_WeirdClass.Address
            /// </summary>
            public virtual Query_Address<T1> Address {
                get {
                    return new Query_Address<T1>(this, "Address", null);
                }
            }
            
            /// <summary>
            /// Query helper for member Query_WeirdClass.Key
            /// </summary>
            public virtual Query_Key<T1> Key {
                get {
                    return new Query_Key<T1>(this, "Key", associationPath);
                }
            }
            
            /// <summary>
            /// Query helper for member Query_WeirdClass.Query_Address
            /// </summary>
            public partial class Query_Address<T2> : QueryBuilder<T2>
             {
                
                /// <summary>
                /// Query helper for member Query_Address..ctor
                /// </summary>
                public Query_Address(QueryBuilder<T2> parent, string name, string associationPath) : 
                        base(parent, name, associationPath) {
                }
                
                /// <summary>
                /// Query helper for member Query_Address..ctor
                /// </summary>
                public Query_Address(QueryBuilder<T2> parent, string name, string associationPath, bool backTrackAssociationOnEquality) : 
                        base(parent, name, associationPath, backTrackAssociationOnEquality) {
                }
                
                /// <summary>
                /// Query helper for member Query_Address.
                /// </summary>
                public virtual PropertyQueryBuilder<T2> Street {
                    get {
                        string temp = associationPath;
                        return new PropertyQueryBuilder<T2>(this, "Address.Street", temp);
                    }
                }
                
                /// <summary>
                /// Query helper for member Query_Address.Electronic
                /// </summary>
                public virtual Query_Electronic<T2> Electronic {
                    get {
                        return new Query_Electronic<T2>(this, "Address.Electronic", null);
                    }
                }
                
                /// <summary>
                /// Query helper for member Query_Address.Query_Electronic
                /// </summary>
                public partial class Query_Electronic<T3> : QueryBuilder<T3>
                 {
                    
                    /// <summary>
                    /// Query helper for member Query_Electronic..ctor
                    /// </summary>
                    public Query_Electronic(QueryBuilder<T3> parent, string name, string associationPath) : 
                            base(parent, name, associationPath) {
                    }
                    
                    /// <summary>
                    /// Query helper for member Query_Electronic..ctor
                    /// </summary>
                    public Query_Electronic(QueryBuilder<T3> parent, string name, string associationPath, bool backTrackAssociationOnEquality) : 
                            base(parent, name, associationPath, backTrackAssociationOnEquality) {
                    }
                    
                    /// <summary>
                    /// Query helper for member Query_Electronic.
                    /// </summary>
                    public virtual PropertyQueryBuilder<T3> Email {
                        get {
                            string temp = associationPath;
                            return new PropertyQueryBuilder<T3>(this, "Address.Electronic.Email", temp);
                        }
                    }
                }
            }
            
            /// <summary>
            /// Query helper for member Query_WeirdClass.Query_Key
            /// </summary>
            public partial class Query_Key<T4> : QueryBuilder<T4>
             {
                
                /// <summary>
                /// Query helper for member Query_Key..ctor
                /// </summary>
                public Query_Key(QueryBuilder<T4> parent, string name, string associationPath) : 
                        base(parent, name, associationPath) {
                }
                
                /// <summary>
                /// Query helper for member Query_Key..ctor
                /// </summary>
                public Query_Key(QueryBuilder<T4> parent, string name, string associationPath, bool backTrackAssociationOnEquality) : 
                        base(parent, name, associationPath, backTrackAssociationOnEquality) {
                }
                
                /// <summary>
                /// Query helper for member Query_Key.
                /// </summary>
                public virtual PropertyQueryBuilder<T4> Department {
                    get {
                        string temp = associationPath;
                        return new PropertyQueryBuilder<T4>(this, "Key.Department", temp);
                    }
                }
                
                /// <summary>
                /// Query helper for member Query_Key.
                /// </summary>
                public virtual PropertyQueryBuilder<T4> Level {
                    get {
                        string temp = associationPath;
                        return new PropertyQueryBuilder<T4>(this, "Key.Level", temp);
                    }
                }
            }
        }
        
        /// <summary>
        /// Query helper for member Where.Root_Query_WeirdClass
        /// </summary>
        public partial class Root_Query_WeirdClass : Query_WeirdClass<NHibernate.Query.Generator.Tests.ActiveRecord.WeirdClass> {
            
            /// <summary>
            /// Query helper for member Root_Query_WeirdClass..ctor
            /// </summary>
            public Root_Query_WeirdClass() : 
                    base(null, "this", null) {
            }
        }
    }
    
    public partial class OrderBy {
        
        /// <summary>
        /// Query helper for member OrderBy.WeirdClass
        /// </summary>
        public partial class WeirdClass {
            
            /// <summary>
            /// Query helper for member WeirdClass.Address
            /// </summary>
            public partial class Address {
                
                /// <summary>
                /// Query helper for member Address.Street
                /// </summary>
                public static OrderByClause Street {
                    get {
                        return new OrderByClause("Address.Street");
                    }
                }
                
                /// <summary>
                /// Query helper for member Address.Electronic
                /// </summary>
                public partial class Electronic {
                    
                    /// <summary>
                    /// Query helper for member Electronic.Email
                    /// </summary>
                    public static OrderByClause Email {
                        get {
                            return new OrderByClause("Address.Electronic.Email");
                        }
                    }
                }
            }
            
            /// <summary>
            /// Query helper for member WeirdClass.Key
            /// </summary>
            public partial class Key {
                
                /// <summary>
                /// Query helper for member Key.Department
                /// </summary>
                public static OrderByClause Department {
                    get {
                        return new OrderByClause("Key.Department");
                    }
                }
                
                /// <summary>
                /// Query helper for member Key.Level
                /// </summary>
                public static OrderByClause Level {
                    get {
                        return new OrderByClause("Key.Level");
                    }
                }
            }
        }
    }
    
    public partial class ProjectBy {
        
        /// <summary>
        /// Query helper for member ProjectBy.WeirdClass
        /// </summary>
        public partial class WeirdClass {
            
            /// <summary>
            /// Query helper for member WeirdClass.Address
            /// </summary>
            public partial class Address {
                
                /// <summary>
                /// Query helper for member Address.Street
                /// </summary>
                public static PropertyProjectionBuilder Street {
                    get {
                        return new PropertyProjectionBuilder("Address.Street");
                    }
                }
                
                /// <summary>
                /// Query helper for member Address.Electronic
                /// </summary>
                public partial class Electronic {
                    
                    /// <summary>
                    /// Query helper for member Electronic.Email
                    /// </summary>
                    public static PropertyProjectionBuilder Email {
                        get {
                            return new PropertyProjectionBuilder("Address.Electronic.Email");
                        }
                    }
                }
            }
            
            /// <summary>
            /// Query helper for member WeirdClass.Key
            /// </summary>
            public partial class Key {
                
                /// <summary>
                /// Query helper for member Key.Department
                /// </summary>
                public static PropertyProjectionBuilder Department {
                    get {
                        return new PropertyProjectionBuilder("Key.Department");
                    }
                }
                
                /// <summary>
                /// Query helper for member Key.Level
                /// </summary>
                public static NumericPropertyProjectionBuilder Level {
                    get {
                        return new NumericPropertyProjectionBuilder("Key.Level");
                    }
                }
            }
        }
    }
    
    public partial class GroupBy {
        
        /// <summary>
        /// Query helper for member GroupBy.WeirdClass
        /// </summary>
        public partial class WeirdClass {
            
            /// <summary>
            /// Query helper for member WeirdClass.Address
            /// </summary>
            public partial class Address {
                
                /// <summary>
                /// Query helper for member Address.Street
                /// </summary>
                public static NHibernate.Expression.IProjection Street {
                    get {
                        return NHibernate.Expression.Projections.GroupProperty("Address.Street");
                    }
                }
                
                /// <summary>
                /// Query helper for member Address.Electronic
                /// </summary>
                public partial class Electronic {
                    
                    /// <summary>
                    /// Query helper for member Electronic.Email
                    /// </summary>
                    public static NHibernate.Expression.IProjection Email {
                        get {
                            return NHibernate.Expression.Projections.GroupProperty("Address.Electronic.Email");
                        }
                    }
                }
            }
            
            /// <summary>
            /// Query helper for member WeirdClass.Key
            /// </summary>
            public partial class Key {
                
                /// <summary>
                /// Query helper for member Key.Department
                /// </summary>
                public static NHibernate.Expression.IProjection Department {
                    get {
                        return NHibernate.Expression.Projections.GroupProperty("Key.Department");
                    }
                }
                
                /// <summary>
                /// Query helper for member Key.Level
                /// </summary>
                public static NHibernate.Expression.IProjection Level {
                    get {
                        return NHibernate.Expression.Projections.GroupProperty("Key.Level");
                    }
                }
            }
        }
    }
}
