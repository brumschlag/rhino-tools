connection( 
	"Connection",
	ConnectionType: SqlConnection,
	ConnectionString: "Data Source=localhost;Initial Catalog=ETL_Test; Integrated Security=SSPI;"
	)

source UsersSource, Connection="Connection":
	Command: "SELECT Id, Name, Email FROM Users_Source"
	
transform ThrowAtThirdRow:
	Context.Items.Count = 0 unless Context.Items.Count
	Context.Items.Count+=1
	if Context.Items.Count >= 3:
		raise Exception("Just an error")

transform SplitName:
	Row.FirstName = Row.Name.Split(char(' '))[0]
	Row.LastName = Row.Name.Split(char(' '))[1]
	
transform RemoveRowsWithBadId:
	RemoveRow() if not Row.Email.Contains('@')

destination UsersDestination, Connection = "Connection":
	Command: """INSERT INTO Users_Destination (UserId, [First Name], [Last Name], Email)
				VALUES (@Id, @FirstName, @LastName, @Email)
			 """

pipeline CopyUsers:
	UsersSource >> SplitName
	SplitName >> RemoveRowsWithBadId
	RemoveRowsWithBadId >> UsersDestination

pipeline WillThrow:
	UsersSource >> ThrowAtThirdRow

target default:
	cookie = Execute("WillThrow")
	Execute("CopyUsers").After(cookie)
	
target withTransaction:
	transaction:
		cookie = Execute("CopyUsers")
		Execute("WillThrow").After(cookie)
		
target withOutTransaction:
	cookie = Execute("CopyUsers")
	Execute("WillThrow").After(cookie)
	
	
target transactionWithIsolationLevel:
	transaction(IsolationLevel.Serializable):
		cookie = Execute("CopyUsers")
		Execute("WillThrow").After(cookie)