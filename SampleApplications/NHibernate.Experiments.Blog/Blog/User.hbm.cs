//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Query {
    
    
    public partial class Where {
        
        static Root_Query_User _root_query_User = new Root_Query_User();
        
        public static Root_Query_User User {
            get {
                return _root_query_User;
            }
        }
        
        public partial class Query_User<T1> : Query.QueryBuilder<T1>
         {
            
            public Query_User(string name, string assoicationPath) : 
                    base(name, assoicationPath) {
            }
            
            public Query_User(string name, string assoicationPath, bool backTrackAssoicationOnEquality) : 
                    base(name, assoicationPath, backTrackAssoicationOnEquality) {
            }
            
            public virtual Query.PropertyQueryBuilder<T1> Password {
                get {
                    string temp = assoicationPath;
                    return new Query.PropertyQueryBuilder<T1>("Password", temp);
                }
            }
            
            public virtual Query.PropertyQueryBuilder<T1> Username {
                get {
                    string temp = assoicationPath;
                    return new Query.PropertyQueryBuilder<T1>("Username", temp);
                }
            }
            
            public virtual Query.PropertyQueryBuilder<T1> Email {
                get {
                    string temp = assoicationPath;
                    return new Query.PropertyQueryBuilder<T1>("Email", temp);
                }
            }
            
            public virtual Query.PropertyQueryBuilder<T1> CreatedAt {
                get {
                    string temp = assoicationPath;
                    return new Query.PropertyQueryBuilder<T1>("CreatedAt", temp);
                }
            }
            
            public virtual Query.PropertyQueryBuilder<T1> Bio {
                get {
                    string temp = assoicationPath;
                    return new Query.PropertyQueryBuilder<T1>("Bio", temp);
                }
            }
            
            public virtual Query.QueryBuilder<T1> Id {
                get {
                    string temp = assoicationPath;
                    return new Query.QueryBuilder<T1>("Id", temp);
                }
            }
        }
        
        public partial class Root_Query_User : Query_User<MyBlog.User> {
            
            public Root_Query_User() : 
                    base("this", null) {
            }
        }
    }
    
    public partial class OrderBy {
        
        public partial class User {
            
            public static Query.OrderByClause Password {
                get {
                    return new Query.OrderByClause("Password");
                }
            }
            
            public static Query.OrderByClause Username {
                get {
                    return new Query.OrderByClause("Username");
                }
            }
            
            public static Query.OrderByClause Email {
                get {
                    return new Query.OrderByClause("Email");
                }
            }
            
            public static Query.OrderByClause CreatedAt {
                get {
                    return new Query.OrderByClause("CreatedAt");
                }
            }
            
            public static Query.OrderByClause Bio {
                get {
                    return new Query.OrderByClause("Bio");
                }
            }
        }
    }
    
    public partial class ProjectBy {
        
        public partial class User {
            
            public static Query.PropertyProjectionBuilder Password {
                get {
                    return new Query.PropertyProjectionBuilder("Password");
                }
            }
            
            public static Query.PropertyProjectionBuilder Username {
                get {
                    return new Query.PropertyProjectionBuilder("Username");
                }
            }
            
            public static Query.PropertyProjectionBuilder Email {
                get {
                    return new Query.PropertyProjectionBuilder("Email");
                }
            }
            
            public static Query.PropertyProjectionBuilder CreatedAt {
                get {
                    return new Query.PropertyProjectionBuilder("CreatedAt");
                }
            }
            
            public static Query.PropertyProjectionBuilder Bio {
                get {
                    return new Query.PropertyProjectionBuilder("Bio");
                }
            }
        }
    }
    
    public partial class GroupBy {
        
        public partial class User {
            
            public static NHibernate.Expression.IProjection Password {
                get {
                    return NHibernate.Expression.Projections.GroupProperty("Password");
                }
            }
            
            public static NHibernate.Expression.IProjection Username {
                get {
                    return NHibernate.Expression.Projections.GroupProperty("Username");
                }
            }
            
            public static NHibernate.Expression.IProjection Email {
                get {
                    return NHibernate.Expression.Projections.GroupProperty("Email");
                }
            }
            
            public static NHibernate.Expression.IProjection CreatedAt {
                get {
                    return NHibernate.Expression.Projections.GroupProperty("CreatedAt");
                }
            }
            
            public static NHibernate.Expression.IProjection Bio {
                get {
                    return NHibernate.Expression.Projections.GroupProperty("Bio");
                }
            }
        }
    }
}
