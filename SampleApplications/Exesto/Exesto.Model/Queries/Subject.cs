//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Query {
    
    
    public partial class Where {
        
        static Root_Query_Subject _root_query_Subject = new Root_Query_Subject();
        
        public static Root_Query_Subject Subject {
            get {
                return _root_query_Subject;
            }
        }
        
        public partial class Query_Subject<T1> : Query.QueryBuilder<T1>
         {
            
            public Query_Subject(string name, string assoicationPath) : 
                    base(name, assoicationPath) {
            }
            
            public Query_Subject(string name, string assoicationPath, bool backTrackAssoicationOnEquality) : 
                    base(name, assoicationPath, backTrackAssoicationOnEquality) {
            }
            
            public virtual Query.PropertyQueryBuilder<T1> Name {
                get {
                    string temp = assoicationPath;
                    return new Query.PropertyQueryBuilder<T1>("Name", temp);
                }
            }
            
            public virtual Query.QueryBuilder<T1> Id {
                get {
                    string temp = assoicationPath;
                    return new Query.QueryBuilder<T1>("Id", temp);
                }
            }
        }
        
        public partial class Root_Query_Subject : Query_Subject<Exesto.Model.Subject> {
            
            public Root_Query_Subject() : 
                    base("this", null) {
            }
        }
    }
    
    public partial class OrderBy {
        
        public partial class Subject {
            
            public static Query.OrderByClause Name {
                get {
                    return new Query.OrderByClause("Name");
                }
            }
        }
    }
    
    public partial class ProjectBy {
        
        public partial class Subject {
            
            public static Query.PropertyProjectionBuilder Name {
                get {
                    return new Query.PropertyProjectionBuilder("Name");
                }
            }
        }
    }
    
    public partial class GroupBy {
        
        public partial class Subject {
            
            public static NHibernate.Expression.IProjection Name {
                get {
                    return NHibernate.Expression.Projections.GroupProperty("Name");
                }
            }
        }
    }
}
